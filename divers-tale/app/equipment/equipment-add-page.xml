<Page
    class="page"
    navigatingTo="onNavigatingTo"  
    xmlns:nsDrawer="nativescript-pro-ui/sidedrawer"
    xmlns:myDrawer="shared/my-drawer"
    xmlns="http://www.nativescript.org/tns.xsd"
    xmlns:dd="nativescript-drop-down" loaded="pageLoaded"
    xmlns:FAB="nativescript-floatingactionbutton">

    <ActionBar class="action-bar">
        <!-- 
        Use the NavigationButton as a side-drawer button in Android because ActionItems are shown on the right side of the ActionBar
        -->
        <NavigationButton ios:visibility="collapsed" icon="res://menu" tap="onDrawerButtonTap"></NavigationButton>
        <!-- 
        Use the ActionItem for IOS with position set to left. Using the NavigationButton as a side-drawer button in iOS is not possible, because its function is to always navigate back in the application.
        -->
        <ActionItem icon="res://navigation/menu" 
            android:visibility="collapsed" 
            tap="onDrawerButtonTap"
            ios.position="left">
        </ActionItem>
        <action-item text="Hinzufügen" ios.position="right" android.position="popup" tap="saveEntriesTap"/>
        <Label class="action-bar-title" text="Equipment Hinzufügen"></Label>
    </ActionBar>

    <!--
    RadSideDrawer is a UI component part of the Progress NativeScript UI set of components.
    Learn more about the RadSideDrawer UI component and how it can be customized in this documentation article:
    http://docs.telerik.com/devtools/nativescript-ui/Controls/NativeScript/SideDrawer/getting-started
    The RadSideDrawer component is designed to be used as a root element to the <Page> and
    it shouldn't have any other siblings other than the <ActionBar> component.
    -->
    <nsDrawer:RadSideDrawer id="sideDrawer" showOverNavigation="true">
        <!--
        Use the RadSideDrawer.drawerTransition component to change the open/close animation of the drawer.
        -->
        <nsDrawer:RadSideDrawer.drawerTransition>
            <nsDrawer:SlideInOnTopTransition/>
        </nsDrawer:RadSideDrawer.drawerTransition>

        <!--
        Use the RadSideDrawer.drawerContent component to display the content of the app drawer on this page.
        Always wrap content in a layout component.
        -->
        <nsDrawer:RadSideDrawer.drawerContent>
            <StackLayout>
                <!--
                Use {N} custom components to reuse UI across your mobile app.
                The MyDrawer custom component defined in "/shared/my-drawer" holds the contents of the app drawer.
                Learn more about custom components and how they can be used in this documentation article:
                http://docs.nativescript.org/ui/basics#custom-components
                -->
                <myDrawer:MyDrawer selectedPage="EquipmentAdd"/>
            </StackLayout>
        </nsDrawer:RadSideDrawer.drawerContent>

        <!--
        Use the RadSideDrawer.mainContent component to display the content of the page when you have an app drawer.
        Always wrap content in a layout component.
        -->
        <nsDrawer:RadSideDrawer.mainContent>
        <StackLayout class="page-content">
        <AbsoluteLayout >
            <TextField colspan="2" left="10" top="50" width="100%" id="name" autocorrect="false" hint="Name" autocapitalizationType="none" />
            <TextField colspan="2" left="10" top="100" width="100%" id="description" hint="Beschreibung" keyboardType="email" autocorrect="false" autocapitalizationType="none" />
            <TextField colspan="2" left="10" top="150" width="100%" id="purchaseDate" hint="Einkaufsdatum" keyboardType="datetime" autocorrect="false" autocapitalizationType="none" />
            <TextField colspan="2" left="10" top="200" width="100%" id="purchasePrice" hint="Einkaufspreis" keyboardType="number" autocorrect="false" autocapitalizationType="none" />
            <TextField colspan="2" left="10" top="250" width="100%" id="nextInspection" hint="Nächste Inspektion" keyboardType="datetime" autocorrect="false" autocapitalizationType="none" />
        
        </AbsoluteLayout>
        
        <GridLayout rows="auto, auto, *" columns="auto, *">
            <dd:DropDown items="{{ items }}" selectedIndex="{{ selectedIndex }}" 
                 opened="dropDownOpened" closed="dropDownClosed" 
                 selectedIndexChanged="dropDownSelectedIndexChanged"
                 row="0" colSpan="2" />  
        </GridLayout>
        
        <FAB:fab row="5" tap="saveEntriesTap" rippleColor="#f1f1f1" class="fab-button" icon="res://ic_add_white"/>
        </StackLayout>
        
        </nsDrawer:RadSideDrawer.mainContent>
    </nsDrawer:RadSideDrawer>
</Page>
